{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\NFT-Browser\\\\nft-nexus-local-ver\\\\client\\\\src\\\\components\\\\wallet-explorer-components\\\\NFTDisplayGrid.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = ({\n  content\n}) => {\n  let Component;\n\n  /*\r\n  switch (content) {\r\n    case false:\r\n      Component = HomeContent;\r\n      break;\r\n    case true:\r\n      Component = WalletContent;\r\n      break;\r\n    default:\r\n      Component = HomeContent;\r\n  }\r\n  */\n\n  console.log(content);\n  if (content === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"null\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else {\n    try {\n      output = content[\"output\"];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: output.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item[2],\n            alt: item[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Collection: \", item[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item[3],\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View Metadata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    } catch {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  }\n};\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Results","content","Component","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","output","className","map","item","index","src","alt","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/NFT-Browser/nft-nexus-local-ver/client/src/components/wallet-explorer-components/NFTDisplayGrid.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Results = ({ content }) => {\r\n  let Component;\r\n\r\n  /*\r\n  switch (content) {\r\n    case false:\r\n      Component = HomeContent;\r\n      break;\r\n    case true:\r\n      Component = WalletContent;\r\n      break;\r\n    default:\r\n      Component = HomeContent;\r\n  }\r\n  */\r\n\r\n  console.log(content)\r\n\r\n  if (content === null) {\r\n    return (\r\n      <p>null</p>\r\n    )\r\n  } else {\r\n    try {\r\n      output = content[\"output\"];\r\n      return (\r\n        <div className=\"grid-container\">\r\n          {output.map((item, index) => (\r\n            <div className=\"grid-item\" key={index}>\r\n              <img src={item[2]} alt={item[0]} />\r\n              <h3>{item[0]}</h3>\r\n              <p>Collection: {item[1]}</p>\r\n              <a href={item[3]} target=\"_blank\" rel=\"noopener noreferrer\">View Metadata</a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } catch {\r\n      return (\r\n        <p>error</p>\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default Results;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/B,IAAIC,SAAS;;EAEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEEC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EAEpB,IAAIA,OAAO,KAAK,IAAI,EAAE;IACpB,oBACEF,OAAA;MAAAM,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAEf,CAAC,MAAM;IACL,IAAI;MACFC,MAAM,GAAGT,OAAO,CAAC,QAAQ,CAAC;MAC1B,oBACEF,OAAA;QAAKY,SAAS,EAAC,gBAAgB;QAAAN,QAAA,EAC5BK,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBf,OAAA;UAAKY,SAAS,EAAC,WAAW;UAAAN,QAAA,gBACxBN,OAAA;YAAKgB,GAAG,EAAEF,IAAI,CAAC,CAAC,CAAE;YAACG,GAAG,EAAEH,IAAI,CAAC,CAAC;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnCV,OAAA;YAAAM,QAAA,EAAKQ,IAAI,CAAC,CAAC;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClBV,OAAA;YAAAM,QAAA,GAAG,cAAY,EAACQ,IAAI,CAAC,CAAC,CAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BV,OAAA;YAAGkB,IAAI,EAAEJ,IAAI,CAAC,CAAC,CAAE;YAACK,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAAd,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAJ/CK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKhC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV,CAAC,CAAC,MAAM;MACN,oBACEV,OAAA;QAAAM,QAAA,EAAG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAEhB;EACF;AACF,CAAC;AAACW,EAAA,GA3CIpB,OAAO;AA8Cb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}