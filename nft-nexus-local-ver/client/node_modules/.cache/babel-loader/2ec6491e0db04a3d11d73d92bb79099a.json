{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\NFT-Browser\\\\nft-nexus-local-ver\\\\client\\\\src\\\\components\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { searchCollection } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [output, setOutput] = useState([]);\n  const [status, setStatus] = useState(null);\n  const fetchDataCalledRef = useRef(false); // Ref to prevent duplicate fetching\n\n  const loadFeaturedNFT = useCallback(async () => {\n    try {\n      const data = {\n        collection: '',\n        cursor: null,\n        sort: '',\n        count: 1\n      };\n      const response = await searchCollection(data);\n      setOutput(response.output);\n      console.log('Processed data:', response);\n      console.log(output);\n    } catch (error) {\n      setStatus('500');\n      console.error('Error fetching collections:', error);\n    }\n  }, [output]);\n  useEffect(() => {\n    // Function to fetch data from the API\n    const fetchData = async () => {\n      if (!fetchDataCalledRef.current) {\n        fetchDataCalledRef.current = true;\n        try {\n          loadFeaturedNFT();\n        } catch (err) {\n          setOutput([\"error\"]);\n        }\n      }\n      ;\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      align: \"center\",\n      children: \"NFT Nexus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      align: \"center\",\n      children: \"Find NFTs easily using this intuitive website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"fail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"RO0ycxZAewAq/I1CObLyinS5pqc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","searchCollection","jsxDEV","_jsxDEV","Home","_s","output","setOutput","status","setStatus","fetchDataCalledRef","loadFeaturedNFT","data","collection","cursor","sort","count","response","console","log","error","fetchData","current","err","children","align","fileName","_jsxFileName","lineNumber","columnNumber","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/NFT-Browser/nft-nexus-local-ver/client/src/components/home.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { searchCollection } from '../utils/api';\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const [output, setOutput] = useState([]);\r\n  const [status, setStatus] = useState(null);\r\n  const fetchDataCalledRef = useRef(false); // Ref to prevent duplicate fetching\r\n\r\n  const loadFeaturedNFT = useCallback(async () => {\r\n    try {\r\n      const data = { collection: '', cursor: null, sort: '', count: 1 };\r\n      const response = await searchCollection(data);\r\n      setOutput(response.output)\r\n      console.log('Processed data:', response);\r\n      console.log(output);\r\n    } catch (error) {\r\n      setStatus('500');\r\n      console.error('Error fetching collections:', error);\r\n    }\r\n  }, [output] )\r\n\r\n  useEffect(() => {\r\n    // Function to fetch data from the API\r\n    const fetchData = async () => {\r\n      if (!fetchDataCalledRef.current) {\r\n        fetchDataCalledRef.current = true;\r\n        try {\r\n          loadFeaturedNFT();\r\n        } catch (err) {\r\n          setOutput([\"error\"]);\r\n        }\r\n      };\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <h1 align=\"center\">NFT Nexus</h1>\r\n      <p align=\"center\">Find NFTs easily using this intuitive website</p>\r\n      <img alt=\"fail\"></img>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMa,kBAAkB,GAAGV,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE1C,MAAMW,eAAe,GAAGZ,WAAW,CAAC,YAAY;IAC9C,IAAI;MACF,MAAMa,IAAI,GAAG;QAAEC,UAAU,EAAE,EAAE;QAAEC,MAAM,EAAE,IAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAE,CAAC;MACjE,MAAMC,QAAQ,GAAG,MAAMhB,gBAAgB,CAACW,IAAI,CAAC;MAC7CL,SAAS,CAACU,QAAQ,CAACX,MAAM,CAAC;MAC1BY,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;MACxCC,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;IACrB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdX,SAAS,CAAC,KAAK,CAAC;MAChBS,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC,EAAE,CAACd,MAAM,CAAE,CAAC;EAEbR,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAACX,kBAAkB,CAACY,OAAO,EAAE;QAC/BZ,kBAAkB,CAACY,OAAO,GAAG,IAAI;QACjC,IAAI;UACFX,eAAe,CAAC,CAAC;QACnB,CAAC,CAAC,OAAOY,GAAG,EAAE;UACZhB,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;QACtB;MACF;MAAC;IACH,CAAC;IACDc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAIsB,KAAK,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC1B,OAAA;MAAGsB,KAAK,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAA6C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnE1B,OAAA;MAAK2B,GAAG,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEX,CAAC;AAACxB,EAAA,CAzCID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}