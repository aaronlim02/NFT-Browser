{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\NFT-Browser\\\\nft-nexus-local-ver\\\\client\\\\src\\\\components\\\\wallet-explorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { processData } from '../utils/api';\nimport Results from './wallet-explorer-components/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletExplorer = () => {\n  _s();\n  const [output, setOutput] = useState(null);\n  const [walletAddress, setWalletAddress] = useState('');\n  const handleProcessData = async e => {\n    e.preventDefault(); // Prevent page refresh\n    try {\n      const data = {\n        walletAddress\n      };\n      const response = await processData(data);\n      console.log('Processed data:', response);\n      setOutput(response.input_data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      align: \"center\",\n      children: \"Enter wallet address to display NFTs in a wallet:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"center\",\n      onSubmit: handleProcessData,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: walletAddress,\n        onChange: e => setWalletAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [\"output: \", JSON.stringify(output, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletExplorer, \"eSCpaQWmmEZeoIl1yh7+o9tqB7w=\");\n_c = WalletExplorer;\nexport default WalletExplorer;\nvar _c;\n$RefreshReg$(_c, \"WalletExplorer\");","map":{"version":3,"names":["React","useState","processData","Results","jsxDEV","_jsxDEV","WalletExplorer","_s","output","setOutput","walletAddress","setWalletAddress","handleProcessData","e","preventDefault","data","response","console","log","input_data","error","children","align","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/NFT-Browser/nft-nexus-local-ver/client/src/components/wallet-explorer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { processData } from '../utils/api';\r\nimport Results from './wallet-explorer-components/results';\r\n\r\nconst WalletExplorer = () => {\r\n  const [output, setOutput] = useState(null);\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n\r\n  const handleProcessData = async (e) => {\r\n    e.preventDefault(); // Prevent page refresh\r\n    try {\r\n      const data = { walletAddress };\r\n      const response = await processData(data);\r\n      console.log('Processed data:', response);\r\n      setOutput(response.input_data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <p align=\"center\">Enter wallet address to display NFTs in a wallet:</p>\r\n      <form className=\"center\" onSubmit={handleProcessData}>\r\n        <input \r\n          type=\"text\" \r\n          value={walletAddress}\r\n          onChange={(e) => setWalletAddress(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n        <pre>output: {JSON.stringify(output, null, 2)}</pre>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default WalletExplorer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAOC,OAAO,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI;MACF,MAAMC,IAAI,GAAG;QAAEL;MAAc,CAAC;MAC9B,MAAMM,QAAQ,GAAG,MAAMd,WAAW,CAACa,IAAI,CAAC;MACxCE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;MACxCP,SAAS,CAACO,QAAQ,CAACG,UAAU,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAGiB,KAAK,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAiD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvErB,OAAA;MAAMsB,SAAS,EAAC,QAAQ;MAACC,QAAQ,EAAEhB,iBAAkB;MAAAS,QAAA,gBACnDhB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,aAAc;QACrBqB,QAAQ,EAAGlB,CAAC,IAAKF,gBAAgB,CAACE,CAAC,CAACmB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFrB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrCrB,OAAA;QAAAgB,QAAA,GAAK,UAAQ,EAACY,IAAI,CAACC,SAAS,CAAC1B,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACnB,EAAA,CA9BID,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}