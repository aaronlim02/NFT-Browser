{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\NFT-Browser\\\\nft-nexus-local-ver\\\\client\\\\src\\\\components\\\\wallet-explorer-components\\\\NFTDisplayGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = ({\n  content\n}) => {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      if (content) {\n        const output = content[\"output\"];\n        const imagesWithUrls = await Promise.all(output.map(async item => {\n          const cid = item[2].split('/').pop(); // Extract CID from the URL\n          const workingUrl = await getWorkingIpfsUrl(cid);\n          return {\n            ...item,\n            workingUrl\n          };\n        }));\n        setImages(imagesWithUrls);\n      }\n    };\n    fetchImages();\n  }, [content]);\n  if (content === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"null\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: images.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.workingUrl || item[2],\n          alt: item[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item[0] ? item[0] : \"<null>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item[3],\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Results","content","_s","images","setImages","fetchImages","output","imagesWithUrls","Promise","all","map","item","cid","split","pop","workingUrl","getWorkingIpfsUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","id","src","alt","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/NFT-Browser/nft-nexus-local-ver/client/src/components/wallet-explorer-components/NFTDisplayGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Results = ({ content }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      if (content) {\r\n        const output = content[\"output\"];\r\n        const imagesWithUrls = await Promise.all(\r\n          output.map(async (item) => {\r\n            const cid = item[2].split('/').pop(); // Extract CID from the URL\r\n            const workingUrl = await getWorkingIpfsUrl(cid);\r\n            return { ...item, workingUrl };\r\n          })\r\n        );\r\n        setImages(imagesWithUrls);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, [content]);\r\n\r\n  if (content === null) {\r\n    return <p>null</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {images.map((item, index) => (\r\n        <div className=\"grid-item\" key={index}>\r\n          <div id=\"image-container\">\r\n            <img src={item.workingUrl || item[2]} alt={item[0]} />\r\n          </div>\r\n          <h3>{item[0] ? item[0] : \"<null>\"}</h3>\r\n          <p>{item[1]}</p>\r\n          <a href={item[3]} target=\"_blank\" rel=\"noopener noreferrer\">View Metadata</a>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAIJ,OAAO,EAAE;QACX,MAAMK,MAAM,GAAGL,OAAO,CAAC,QAAQ,CAAC;QAChC,MAAMM,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCH,MAAM,CAACI,GAAG,CAAC,MAAOC,IAAI,IAAK;UACzB,MAAMC,GAAG,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;UACtC,MAAMC,UAAU,GAAG,MAAMC,iBAAiB,CAACJ,GAAG,CAAC;UAC/C,OAAO;YAAE,GAAGD,IAAI;YAAEI;UAAW,CAAC;QAChC,CAAC,CACH,CAAC;QACDX,SAAS,CAACG,cAAc,CAAC;MAC3B;IACF,CAAC;IAEDF,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,IAAIA,OAAO,KAAK,IAAI,EAAE;IACpB,oBAAOF,OAAA;MAAAkB,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpB;EAEA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAL,QAAA,EAC5Bd,MAAM,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEY,KAAK,kBACtBxB,OAAA;MAAKuB,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxBlB,OAAA;QAAKyB,EAAE,EAAC,iBAAiB;QAAAP,QAAA,eACvBlB,OAAA;UAAK0B,GAAG,EAAEd,IAAI,CAACI,UAAU,IAAIJ,IAAI,CAAC,CAAC,CAAE;UAACe,GAAG,EAAEf,IAAI,CAAC,CAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACNtB,OAAA;QAAAkB,QAAA,EAAKN,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvCtB,OAAA;QAAAkB,QAAA,EAAIN,IAAI,CAAC,CAAC;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBtB,OAAA;QAAG4B,IAAI,EAAEhB,IAAI,CAAC,CAAC,CAAE;QAACiB,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAZ,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAN/CE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOhC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAvCIF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}