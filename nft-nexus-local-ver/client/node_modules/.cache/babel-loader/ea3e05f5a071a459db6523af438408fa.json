{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\NFT-Browser\\\\nft-nexus-local-ver\\\\client\\\\src\\\\components\\\\account\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { walletStats } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = walletAddress => {\n  _s();\n  const [output, setOutput] = useState({});\n  const fetchDataCalledRef = useRef(false); // Ref to prevent duplicate fetching\n\n  const handleProcessData = useCallback(async () => {\n    try {\n      const data = {\n        walletAddress\n      };\n      const response = await walletStats(data);\n      setOutput(response.output);\n    } catch (error) {\n      console.error('Error fetching account data:', error);\n    }\n  });\n  useEffect(() => {\n    // Function to fetch data from the API\n    const fetchData = async () => {\n      if (!fetchDataCalledRef.current) {\n        fetchDataCalledRef.current = true;\n        try {\n          handleProcessData();\n        } catch (err) {\n          setOutput({\n            error: 'true',\n            msg: err\n          });\n        }\n      }\n      ;\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Overview \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ETH Balance: \", output.wallet_balance, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bAa6/hgYuYLCtV0QSt5FO5pSAjQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","walletStats","jsxDEV","_jsxDEV","Dashboard","walletAddress","_s","output","setOutput","fetchDataCalledRef","handleProcessData","data","response","error","console","fetchData","current","err","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","wallet_balance","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/NFT-Browser/nft-nexus-local-ver/client/src/components/account/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { walletStats } from '../../utils/api';\r\n\r\nconst Dashboard = (walletAddress) => {\r\n\r\n  const [output, setOutput] = useState({});\r\n  const fetchDataCalledRef = useRef(false); // Ref to prevent duplicate fetching\r\n\r\n  const handleProcessData = useCallback(async () => {\r\n    try {\r\n      const data = { walletAddress };\r\n      const response = await walletStats(data);\r\n      setOutput(response.output);\r\n    } catch (error) {\r\n      console.error('Error fetching account data:', error);\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    // Function to fetch data from the API\r\n    const fetchData = async () => {\r\n      if (!fetchDataCalledRef.current) {\r\n        fetchDataCalledRef.current = true;\r\n        try {\r\n          handleProcessData();\r\n        } catch (err) {\r\n          setOutput({error: 'true', msg: err});\r\n        }\r\n      };\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n    <h2>Overview </h2>\r\n    <p>ETH Balance: {output.wallet_balance} </p>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMY,kBAAkB,GAAGT,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE1C,MAAMU,iBAAiB,GAAGX,WAAW,CAAC,YAAY;IAChD,IAAI;MACF,MAAMY,IAAI,GAAG;QAAEN;MAAc,CAAC;MAC9B,MAAMO,QAAQ,GAAG,MAAMX,WAAW,CAACU,IAAI,CAAC;MACxCH,SAAS,CAACI,QAAQ,CAACL,MAAM,CAAC;IAC5B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAACN,kBAAkB,CAACO,OAAO,EAAE;QAC/BP,kBAAkB,CAACO,OAAO,GAAG,IAAI;QACjC,IAAI;UACFN,iBAAiB,CAAC,CAAC;QACrB,CAAC,CAAC,OAAOO,GAAG,EAAE;UACZT,SAAS,CAAC;YAACK,KAAK,EAAE,MAAM;YAAEK,GAAG,EAAED;UAAG,CAAC,CAAC;QACtC;MACF;MAAC;IACH,CAAC;IACDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC1BjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA;MAAAiB,QAAA,GAAG,eAAa,EAACb,MAAM,CAACkB,cAAc,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAER,CAAC;AAAAlB,EAAA,CApCKF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}