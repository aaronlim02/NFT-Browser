{"ast":null,"code":"// client/src/utils/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5001' // Adjust based on your server setup\n});\nexport const searchWallet = async data => {\n  try {\n    const response = await api.post('/search-wallet', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error processing data:', error);\n    throw error;\n  }\n};\nexport const searchCollection = async data => {\n  try {\n    const response = await api.post('/search-collection', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error processing data:', error);\n    throw error;\n  }\n};\nexport const walletStats = async data => {\n  try {\n    const response = await api.post('/wallet-stats', data);\n    return response.data;\n  } catch (error) {\n    console.error('Error processing data:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","searchWallet","data","response","post","error","console","searchCollection","walletStats"],"sources":["C:/Users/User/Documents/GitHub/NFT-Browser/nft-nexus-local-ver/client/src/utils/api.js"],"sourcesContent":["// client/src/utils/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5001', // Adjust based on your server setup\r\n});\r\n\r\nexport const searchWallet = async (data) => {\r\n  try {\r\n    const response = await api.post('/search-wallet', (data));\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error processing data:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const searchCollection = async (data) => {\r\n  try {\r\n    const response = await api.post('/search-collection', (data));\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error processing data:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const walletStats = async (data) => {\r\n  try {\r\n    const response = await api.post('/wallet-stats', (data));\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error processing data:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAGF,IAAK,CAAC;IACzD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAOL,IAAI,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,oBAAoB,EAAGF,IAAK,CAAC;IAC7D,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAON,IAAI,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,eAAe,EAAGF,IAAK,CAAC;IACxD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}