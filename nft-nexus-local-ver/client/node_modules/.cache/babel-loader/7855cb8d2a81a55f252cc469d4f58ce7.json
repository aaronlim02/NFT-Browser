{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\NFT-Browser\\\\nft-nexus-local-ver\\\\client\\\\src\\\\components\\\\wallet-explorer-components\\\\NFTDisplayGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testImageUrl = async url => {\n  try {\n    const response = await fetch(url, {\n      method: 'HEAD'\n    });\n    return response.ok;\n  } catch (error) {\n    return false;\n  }\n};\nconst Results = ({\n  content\n}) => {\n  _s();\n  const [images, setImages] = useState([]);\n  if (content === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"null\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  } else if (content === \"400\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"invalid input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    try {\n      var output = content;\n      console.log(output);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: output.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item[2],\n              alt: item[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item[0] ? item[0] : \"<no-name>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item[4],\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View On Opensea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    } catch {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Unknown error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n  }\n};\n_s(Results, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","testImageUrl","url","response","fetch","method","ok","error","Results","content","_s","images","setImages","children","fileName","_jsxFileName","lineNumber","columnNumber","output","console","log","className","map","item","index","id","src","alt","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/NFT-Browser/nft-nexus-local-ver/client/src/components/wallet-explorer-components/NFTDisplayGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst testImageUrl = async (url) => {\r\n  try {\r\n    const response = await fetch(url, { method: 'HEAD' });\r\n    return response.ok;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst Results = ({ content }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  if (content === null) {\r\n    return (\r\n      <p>null</p>\r\n    )\r\n  } else if (content === \"400\") {\r\n    return (\r\n      <p>invalid input</p>\r\n    )\r\n  }\r\n  else {\r\n    try {\r\n      var output = content;\r\n      console.log(output)\r\n      return (\r\n        <div className=\"grid-container\">\r\n          {output.map((item, index) => (\r\n            <div className=\"grid-item\" key={index}>\r\n              <div id=\"image-container\">\r\n                <img src={item[2]} alt={item[0]} />\r\n              </div>\r\n              <h3>{item[0] ? item[0] : \"<no-name>\"}</h3>\r\n              <p>{item[1]}</p>\r\n              <a href={item[4]} target=\"_blank\" rel=\"noopener noreferrer\">View On Opensea</a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    } catch {\r\n      return (\r\n        <p>Unknown error</p>\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default Results;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAG,MAAOC,GAAG,IAAK;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;MAAEG,MAAM,EAAE;IAAO,CAAC,CAAC;IACrD,OAAOF,QAAQ,CAACG,EAAE;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,IAAIY,OAAO,KAAK,IAAI,EAAE;IACpB,oBACET,OAAA;MAAAa,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAEf,CAAC,MAAM,IAAIR,OAAO,KAAK,KAAK,EAAE;IAC5B,oBACET,OAAA;MAAAa,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAExB,CAAC,MACI;IACH,IAAI;MACF,IAAIC,MAAM,GAAGT,OAAO;MACpBU,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,oBACElB,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAR,QAAA,EAC5BK,MAAM,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBxB,OAAA;UAAKqB,SAAS,EAAC,WAAW;UAAAR,QAAA,gBACxBb,OAAA;YAAKyB,EAAE,EAAC,iBAAiB;YAAAZ,QAAA,eACvBb,OAAA;cAAK0B,GAAG,EAAEH,IAAI,CAAC,CAAC,CAAE;cAACI,GAAG,EAAEJ,IAAI,CAAC,CAAC;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACNjB,OAAA;YAAAa,QAAA,EAAKU,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1CjB,OAAA;YAAAa,QAAA,EAAIU,IAAI,CAAC,CAAC;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBjB,OAAA;YAAG4B,IAAI,EAAEL,IAAI,CAAC,CAAC,CAAE;YAACM,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAAjB,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GANjDO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOhC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV,CAAC,CAAC,MAAM;MACN,oBACEjB,OAAA;QAAAa,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAExB;EACF;AACF,CAAC;AAACP,EAAA,CApCIF,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}