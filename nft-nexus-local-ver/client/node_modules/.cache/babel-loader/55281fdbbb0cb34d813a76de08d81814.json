{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Github backup\\\\nft-nexus-local-ver\\\\client\\\\src\\\\components\\\\LoginButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginButton = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check login status from localStorage (or any other method)\n    const loggedInStatus = localStorage.getItem('isLoggedIn') === 'true';\n    setIsLoggedIn(loggedInStatus);\n  }, []);\n  const handleLoginClick = () => {\n    // Redirect to login page\n    window.location.href = '/login';\n  };\n  const handleAccountSettingsClick = () => {\n    // Redirect to account settings page\n    window.location.href = '/account-settings';\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: isLoggedIn ? handleAccountSettingsClick : handleLoginClick,\n    children: isLoggedIn ? 'Account Settings' : 'Login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginButton, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = LoginButton;\nexport default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoginButton","_s","isLoggedIn","setIsLoggedIn","loggedInStatus","localStorage","getItem","handleLoginClick","window","location","href","handleAccountSettingsClick","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Github backup/nft-nexus-local-ver/client/src/components/LoginButton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LoginButton = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check login status from localStorage (or any other method)\r\n    const loggedInStatus = localStorage.getItem('isLoggedIn') === 'true';\r\n    setIsLoggedIn(loggedInStatus);\r\n  }, []);\r\n\r\n  const handleLoginClick = () => {\r\n    // Redirect to login page\r\n    window.location.href = '/login'\r\n  };\r\n\r\n  const handleAccountSettingsClick = () => {\r\n    // Redirect to account settings page\r\n    window.location.href = '/account-settings';\r\n  };\r\n\r\n  return (\r\n    <button onClick={isLoggedIn ? handleAccountSettingsClick : handleLoginClick}>\r\n      {isLoggedIn ? 'Account Settings' : 'Login'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;IACpEH,aAAa,CAACC,cAAc,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC,CAAC;EAED,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;IACvC;IACAH,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mBAAmB;EAC5C,CAAC;EAED,oBACEX,OAAA;IAAQa,OAAO,EAAEV,UAAU,GAAGS,0BAA0B,GAAGJ,gBAAiB;IAAAM,QAAA,EACzEX,UAAU,GAAG,kBAAkB,GAAG;EAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEb,CAAC;AAAChB,EAAA,CAxBID,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}