[{"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\index.js":"1","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\App.js":"3","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\login.js":"4","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\PictureButton.js":"5","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\home.js":"6","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\account.js":"7","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\register.js":"8","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\utils\\auth.js":"9","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\AuthButton.js":"10","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\index.js":"11","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\App.js":"12","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\reportWebVitals.js":"13","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\home.js":"14","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\login.js":"15","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\PictureButton.js":"16","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\utils\\auth.js":"17","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\register.js":"18","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\AuthButton.js":"19","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account.js":"20","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\wallet-explorer.js":"21","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guides.js":"22","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\Sidebar.js":"23","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\HomeContent.js":"24","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\MainContent.js":"25","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\WalletContent.js":"26","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\BuySellContent.js":"27","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\utils\\api.js":"28","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\wallet-explorer-components\\NFTDisplayGrid.js":"29","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\Browse.js":"30","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\browse-nfts\\CollectionDisplay.js":"31","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\dashboard.js":"32","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\favourites.js":"33","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\owned-nfts.js":"34","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings.js":"35","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\IntroNFTContent.js":"36","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings-components\\Sidebar.js":"37","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings-components\\PersonalDetails.js":"38","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings-components\\MainContent.js":"39"},{"size":753,"mtime":1717677433842,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1716628026755,"results":"42","hashOfConfig":"41"},{"size":1596,"mtime":1717742526260,"results":"43","hashOfConfig":"41"},{"size":1865,"mtime":1717742009280,"results":"44","hashOfConfig":"41"},{"size":437,"mtime":1716986803016,"results":"45","hashOfConfig":"41"},{"size":387,"mtime":1717070049117,"results":"46","hashOfConfig":"41"},{"size":2068,"mtime":1717743713692,"results":"47","hashOfConfig":"41"},{"size":1178,"mtime":1717677395481,"results":"48","hashOfConfig":"41"},{"size":518,"mtime":1717741822143,"results":"49","hashOfConfig":"41"},{"size":586,"mtime":1717742358671,"results":"50","hashOfConfig":"41"},{"size":753,"mtime":1717677433842,"results":"51","hashOfConfig":"52"},{"size":2125,"mtime":1719221803246,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1716628026755,"results":"54","hashOfConfig":"52"},{"size":345,"mtime":1717832471168,"results":"55","hashOfConfig":"52"},{"size":2790,"mtime":1717833370971,"results":"56","hashOfConfig":"52"},{"size":437,"mtime":1716986803016,"results":"57","hashOfConfig":"52"},{"size":518,"mtime":1717832576786,"results":"58","hashOfConfig":"52"},{"size":1186,"mtime":1717828030876,"results":"59","hashOfConfig":"52"},{"size":586,"mtime":1717742358671,"results":"60","hashOfConfig":"52"},{"size":2619,"mtime":1719554665531,"results":"61","hashOfConfig":"52"},{"size":3159,"mtime":1719319247196,"results":"62","hashOfConfig":"52"},{"size":591,"mtime":1719223052892,"results":"63","hashOfConfig":"52"},{"size":580,"mtime":1719123414196,"results":"64","hashOfConfig":"52"},{"size":1442,"mtime":1719218628292,"results":"65","hashOfConfig":"52"},{"size":777,"mtime":1719222524951,"results":"66","hashOfConfig":"52"},{"size":199,"mtime":1717832394571,"results":"67","hashOfConfig":"52"},{"size":2354,"mtime":1719229396284,"results":"68","hashOfConfig":"52"},{"size":671,"mtime":1718885866809,"results":"69","hashOfConfig":"52"},{"size":2010,"mtime":1719320557571,"results":"70","hashOfConfig":"52"},{"size":5169,"mtime":1719324267898,"results":"71","hashOfConfig":"52"},{"size":2928,"mtime":1718891339441,"results":"72","hashOfConfig":"52"},{"size":144,"mtime":1718954968238,"results":"73","hashOfConfig":"52"},{"size":148,"mtime":1718954967300,"results":"74","hashOfConfig":"52"},{"size":2952,"mtime":1719554966959,"results":"75","hashOfConfig":"52"},{"size":600,"mtime":1719482062688,"results":"76","hashOfConfig":"52"},{"size":2961,"mtime":1719218842032,"results":"77","hashOfConfig":"52"},{"size":323,"mtime":1719480375127,"results":"78","hashOfConfig":"52"},{"size":2394,"mtime":1719547054433,"results":"79","hashOfConfig":"52"},{"size":445,"mtime":1719481938120,"results":"80","hashOfConfig":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},"v3x7nn",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"107"},"3moydd",{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"107"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"107"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"107"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\index.js",["171"],"// client/src/index.js\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["172","173"],"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\App.js",["174","175"],"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\login.js",[],"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\PictureButton.js",[],"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\home.js",["176"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <h1 align=\"center\">NFT Nexus</h1>\r\n      <p align=\"center\">Find NFTs easily using this intuitive website</p>\r\n      <form align=\"center\">\r\n        <input type=\"text\" />\r\n        <button>Search</button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\account.js",["177","178"],"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\register.js",["179"],"// client/src/Register.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/register', { username, password });\r\n      // change to https://nft-browser.vercel.app/api/register for vercel\r\n      alert('Registration successful');\r\n    } catch (error) {\r\n      console.error('Registration error', error);\r\n      alert('Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 align=\"center\">Register</h1>\r\n      <form align=\"center\" onSubmit={handleRegister}>\r\n        <div>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" />\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\utils\\auth.js",[],"C:\\Users\\User\\Documents\\Github backup\\nft-nexus-local-ver\\client\\src\\components\\AuthButton.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\index.js",["180"],["181","182"],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\App.js",["183","184"],"import './App.css';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate, Link } from 'react-router-dom';\r\nimport Login from './components/login';\r\nimport Account from './components/account'; // This is the new page component\r\nimport Home from './components/home';\r\nimport Register from './components/register';\r\nimport WalletExplorer from './components/wallet-explorer';\r\nimport Guides from './components/guides';\r\nimport PictureButton from './components/PictureButton';\r\nimport AuthButton from './components/AuthButton';\r\nimport Browse from './components/Browse';\r\nimport { isAuthenticated } from './utils/auth';\r\n\r\nconst PrivateRoute = ({ element, ...rest }) => {\r\n  return isAuthenticated() ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <nav class=\"navbar\">\r\n          <PictureButton src=\"/images/random-logos/nft-nexus.png\" alt=\"Home\" to=\"/\"/>\r\n          <ul class=\"nav-links\">\r\n            <li><a href=\"/browse\">Browse NFTs</a></li>\r\n            <li><a href=\"/wallet-explorer\">Wallet Explorer</a></li>\r\n            <li><a href=\"/guides\">Guides</a></li>\r\n            <li><a href=\"/account\">My Profile</a></li>\r\n            <li><AuthButton /></li> {/* Use the new AuthButton component */} {/* change to login button */}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      \r\n      <div class=\"main-body\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} /> {/* Home page content */}\r\n          <Route path=\"/browse\" element={<Browse />} /> {/* Login page content */}\r\n          <Route path=\"/login\" element={<Login />} /> {/* Login page content */}\r\n          <Route path=\"/account\" element={<PrivateRoute element={<Account />} />} /> {/* Account page content */}\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/wallet-explorer\" element={<WalletExplorer />} />\r\n          <Route path=\"/guides\" element={<Guides />} />\r\n          <Route path=\"*\" element={<Navigate to=\"/\" />} /> {/* Redirect unknown routes to home */}\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\home.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\login.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\PictureButton.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\utils\\auth.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\register.js",["185"],"// client/src/Register.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/register', { username, password });\r\n      // https://nft-browser.vercel.app/register / http://localhost:5000/register\r\n      alert('Registration successful');\r\n    } catch (error) {\r\n      console.error('Registration error', error);\r\n      alert('Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 align=\"center\">Register</h1>\r\n      <form align=\"center\" onSubmit={handleRegister}>\r\n        <div>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" />\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\AuthButton.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account.js",["186"],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\wallet-explorer.js",["187"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { searchWallet } from '../utils/api';\r\nimport NFTDisplayGrid from './wallet-explorer-components/NFTDisplayGrid'\r\nimport './wallet-explorer-components/NFTDisplayGrid.css';\r\n\r\nconst WalletExplorer = () => {\r\n  const [output, setOutput] = useState([]);\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n  const [cursor, setCursor] = useState(null);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [mode, setMode] = useState('default');\r\n\r\n  const handleProcessData = useCallback(async (source) => {\r\n    if (source === 'search') {\r\n      if (walletAddress.length !== 42) {\r\n        setOutput(\"400\");\r\n        return;\r\n      }\r\n      setOutput([]); // Clear the current output when initiating a new search\r\n      setCursor(null); // Reset the cursor when initiating a new search\r\n      setHasMore(false); // Reset hasMore when initiating a new search\r\n    }\r\n    try {\r\n      const data = { walletAddress, cursor, mode };\r\n      const response = await searchWallet(data);\r\n      console.log('Processed data:', response);\r\n      setCursor(response.next);\r\n      setOutput((prevOutput) => [...prevOutput, ...response.output]);\r\n      setHasMore(response.output.length >= 100);\r\n    } catch (error) {\r\n      console.error('Error fetching NFTs:', error);\r\n    }\r\n  }, [walletAddress, cursor, mode, hasMore]);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = async () => {\r\n      // Check if the user has scrolled to the bottom of the page\r\n      if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || !hasMore) return;\r\n      \r\n      // If the user has scrolled to the bottom and there are more NFTs to load, load more NFTs\r\n      await handleProcessData('scroll');\r\n    };\r\n\r\n    // Add the scroll event listener to the window object\r\n    window.addEventListener('scroll', handleScroll);\r\n    \r\n    // Cleanup function to remove the event listener when the component is unmounted or dependencies change\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [handleProcessData, hasMore]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleProcessData('search');\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <p align=\"center\">Enter wallet address to display NFTs in a wallet:</p>\r\n      <form className=\"center\" onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          value={walletAddress}\r\n          onChange={(e) => setWalletAddress(e.target.value)}\r\n        />\r\n\r\n        <select \r\n          value={mode}\r\n          onChange={(e) => setMode(e.target.value)}\r\n        >\r\n          <option value=\"default\">View NFTs:</option>\r\n          <option value=\"every\">Everything</option>\r\n          <option value=\"listed\">Listed NFTs only</option>\r\n        </select>\r\n\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <NFTDisplayGrid content={output} mode={mode} />\r\n      {hasMore && (\r\n        <div className=\"load-more\">\r\n          <p>Scroll to reveal more NFTs...</p>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default WalletExplorer;","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guides.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\Sidebar.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\HomeContent.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\MainContent.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\WalletContent.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\BuySellContent.js",["188","189"],"import React from 'react';\r\n\r\nconst BuySellContent = () => {\r\n  return (\r\n    <div class=\"body\">\r\n      <h1>How to buy/sell NFTs?</h1>\r\n      <p>This guide will teach you how to purchase and sell NFTs on the Ethereum blockchain with the Opensea Marketplace.</p>\r\n      <p>There are a few prerequisites that users must complete before buying/selling NFTs:</p>\r\n      <img src=\"../../images/resources/buying-prerequisite-tree.png\"></img>\r\n      <h2>Prerequisites</h2>\r\n      <h3>Set up wallet</h3>\r\n      <p>You need a digital wallet to store your cryptocurrencies and NFTs. Popular choices include <a href='https://metamask.io/'>Metamask</a> and Coinbase.\r\n      We will be using Metamask in this guide. To create your wallet, visit the website and follow the instructions. \r\n      You should also install the browser extension in order to connect your wallet to the NFT market places later on. </p>\r\n      <h3>Purchase Ethereum cryptocurrency</h3>\r\n      <p>You can get cryptocurrency from crypto exchanges like <a href='https://www.coinhako.com/'>Coinhako. </a>\r\n      Follow the instructions in the website in order to purchase cryptocurrency.</p>\r\n      <h3>Connect wallet to Opensea</h3>\r\n      <p>On the <a href='https://opensea.io/'>Opensea website</a>, click \"Login\". Then Connect to Opensea with Metamask. \r\n      If you have the extension correctly installed, you should be prompted to login to your Metamask wallet.</p>\r\n      <img src=\"../../images/resources/opensea-metamask-login.png\"></img>\r\n      <p>Unlock your wallet, then follow the prompts in your wallet and on your screen to connect.</p>\r\n      <p>Congratulations, you should now be ready to buy some NFTs!</p>\r\n      <h2>Buying NFTs (step-by-step)</h2>\r\n      <h3>1. Browsing</h3>\r\n      <p>Using this website's \"Browse NFTs\" feature (located on the top right of the toolbar), one can easily browse for a wide variety of NFTs to buy.</p>\r\n      <h3>2. Select an NFT</h3>\r\n      <p>Once you have decided on an NFT to buy, you can go to its Opensea link in order to purchase it.</p>\r\n      <h3>3. Purchase</h3>\r\n      <p>If the NFT is listed for a fixed price, click \"Buy Now\" and confirm the transaction in your wallet.</p>\r\n      <h3>4. Approve the transaction</h3>\r\n      <p>Pay a transaction fee to confirm the purchase.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuySellContent;","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\utils\\api.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\wallet-explorer-components\\NFTDisplayGrid.js",["190","191","192","193","194","195","196"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst testImageUrl = async (url) => {\r\n  try {\r\n    const response = await fetch(url, { method: 'HEAD' });\r\n    return response.ok;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst Results = ({ content, mode }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  if (content === null) {\r\n    return (\r\n      <p>null</p>\r\n    )\r\n  } else if (content === \"400\") {\r\n    return (\r\n      <p>invalid input</p>\r\n    )\r\n  }\r\n  else {\r\n    try {\r\n      var output = content;\r\n      console.log(output)\r\n      if (mode == \"default\" || mode == \"every\") {\r\n        return (\r\n          <div className=\"grid-container\">\r\n            {output.map((item, index) => (\r\n              <div className=\"grid-item\" key={index}>\r\n                <div id=\"image-container\">\r\n                  <img src={item[2]} alt={item[0]} />\r\n                </div>\r\n                <h3>{item[0] ? item[0] : \"<no-name>\"}</h3>\r\n                <p>{item[1]}</p>\r\n                <a href={item[4]} target=\"_blank\" rel=\"noopener noreferrer\">View On Opensea</a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      } else if (mode == \"listed\") {\r\n        return (\r\n          <div className=\"grid-container\">\r\n            {output.map((item, index) => (\r\n              <div className=\"grid-item\" key={index}>\r\n                <div id=\"image-container\">\r\n                  <img src={item[4]} alt={item[3]} />\r\n                </div>\r\n                <h3>{item[3] ? item[3] : \"<no-name>\"}</h3>\r\n                <p>{item[1]}</p>\r\n                <div>\r\n                  <p>{\"Current price: \" + String(Math.round(item[5] * 10000) / 10000) + \" ETH\"}</p>\r\n                  <a href={item[6]} target=\"_blank\" rel=\"noopener noreferrer\">View On Opensea</a>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      }\r\n    } catch {\r\n      return (\r\n        <p>Unknown error</p>\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default Results;","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\Browse.js",["197","198","199"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport CollectionDisplay from './browse-nfts/CollectionDisplay'\r\nimport { searchCollection } from '../utils/api';\r\nimport './browse-nfts/CollectionDisplay.css';\r\n\r\nconst Browse = () => {\r\n  const [output, setOutput] = useState([]);\r\n  const [collection, setCollection] = useState('');\r\n  const cursorRef = useRef(null); // Ref to keep track of the cursor\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [sort, setSort] = useState('');\r\n  const [interval, setInterval] = useState('1');\r\n  const [resultsType, setResultsType] = useState('load');\r\n  const [status, setStatus] = useState(null);\r\n  const fetchDataCalledRef = useRef(false); // Ref to prevent duplicate fetching\r\n\r\n  const handleProcessData = useCallback(async (source) => {\r\n    if (source === 'search' || source === 'load') {\r\n      setResultsType(source);\r\n      setOutput([]); // Clear the current output when initiating a new search\r\n      cursorRef.current = null; // Reset the cursor when initiating a new search\r\n      setHasMore(false); // Reset hasMore when initiating a new search\r\n      setStatus('loading');\r\n    } else {\r\n      setStatus('loading-more');\r\n    }\r\n    try {\r\n      const data = { collection, cursor: cursorRef.current, sort };\r\n      const response = await searchCollection(data);\r\n      console.log('Processed data:', response);\r\n      if (source === 'search' || source === 'load') {\r\n        setOutput((prevOutput) => [...prevOutput, ...response.output]);\r\n      } else {\r\n        setOutput((prevOutput) => [...prevOutput, ...response.output.slice(1)]);\r\n      }\r\n      cursorRef.current = response.next; // Update the cursor reference\r\n      console.log(response.next);\r\n      setHasMore(response.next !== null);\r\n      setStatus('200');\r\n    } catch (error) {\r\n      setStatus('500');\r\n      console.error('Error fetching collections:', error);\r\n    }\r\n  }, [collection, sort, hasMore, resultsType, status]);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch data from the API\r\n    const fetchData = async () => {\r\n      if (!fetchDataCalledRef.current) {\r\n        fetchDataCalledRef.current = true;\r\n        try {\r\n          handleProcessData('load');\r\n        } catch (err) {\r\n          setOutput([\"error\"]);\r\n        }\r\n      };\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = async () => {\r\n      // Check if the user has scrolled to the bottom of the page\r\n      if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || !hasMore) return;\r\n      \r\n      // If the user has scrolled to the bottom and there are more NFTs to load, load more NFTs\r\n      if (status === '200') {\r\n        await handleProcessData('scroll');\r\n      }\r\n    };\r\n\r\n    // Add the scroll event listener to the window object\r\n    window.addEventListener('scroll', handleScroll);\r\n    \r\n    // Cleanup function to remove the event listener when the component is unmounted or dependencies change\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [handleProcessData, hasMore]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleProcessData('search');\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div class=\"header\">\r\n        <form className=\"center\" onSubmit={handleSubmit}>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Type to search collections or leave empty to search all...\"\r\n            value={collection}\r\n            onChange={(e) => {\r\n                setCollection(e.target.value);\r\n                setHasMore(false);\r\n              }\r\n            }\r\n          />\r\n          <select \r\n          value={sort}\r\n          onChange={(e) => {\r\n            setSort(e.target.value);\r\n            setHasMore(false);\r\n            }\r\n          }\r\n        >\r\n          <option value=\"\">Select sort... (only works with search-all)</option>\r\n          <option value=\"market_cap\">Market Cap</option>\r\n          <option value=\"num_owners\">Number of Owners</option>\r\n          <option value=\"one_day_change\">1-Day Change</option>\r\n          <option value=\"seven_day_change\">7-Day Change</option>\r\n          <option value=\"seven_day_volume\">7-Day Volume</option>\r\n        </select>\r\n          <button type=\"submit\" \r\n          disabled={status === \"loading\" || status === \"loading-more\"}>\r\n            Search\r\n          </button>\r\n        </form>\r\n        <div class=\"interval\">\r\n          <p>Select interval:</p>\r\n          <select\r\n            value={interval}\r\n            onChange={(e) => setInterval(e.target.value)}\r\n          >\r\n            <option value=\"1\">1 day</option>\r\n            <option value=\"7\">7 day</option>\r\n            <option value=\"30\">30 day</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <CollectionDisplay content={output} interval={interval} resultsType={resultsType} status={status}/>\r\n      {hasMore && (\r\n      <div className=\"load-more\">\r\n        {status === \"loading-more\" ? <p>Loading...</p> : <p>Scroll to reveal more collections...</p>}\r\n      </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Browse;","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\browse-nfts\\CollectionDisplay.js",["200","201"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst Results = ({ content, interval, resultsType, status }) => {\r\n\r\n  const getColor = (value) => {\r\n    if (value > 0) return 'green';\r\n    if (value < 0) return 'red';\r\n    return 'black';\r\n  };\r\n\r\n  const numberStyle = (num) => ({\r\n    color: getColor(num)\r\n  });\r\n\r\n  if (status === null) {\r\n    return (\r\n      <p>null</p>\r\n    )\r\n  } else if (status === \"loading\") {\r\n    return (\r\n      <p>Loading...</p>\r\n    )\r\n  }\r\n   else if (status === \"400\") {\r\n    return (\r\n      <p>invalid input</p>\r\n    )\r\n  } else if (status === \"500\") {\r\n    return (\r\n      <p>internal error</p>\r\n    )\r\n  }\r\n  else {\r\n    try {\r\n      var output = content;\r\n      console.log(output);\r\n\r\n      const columns = [\r\n        { header: 'No.' },\r\n        { header: 'Collection' },\r\n        { header: (resultsType === 'load' ? 'Type' : 'Supply')},\r\n        { header: 'Floor Price' },\r\n        { header: 'Market Cap', accessor: 'market-cap' },\r\n        { header: 'No. of Sales' },\r\n        { header: 'Volume' },\r\n        { header: 'Volume % Chg.' }\r\n      ];\r\n      \r\n      var i = 0;\r\n      if (interval === '1') {\r\n        i = 0;\r\n      } else if (interval === '7') {\r\n        i = 1;\r\n      } else if (interval === '30') {\r\n        i = 2;\r\n      }\r\n\r\n      return (\r\n        <div className=\"table-container\">\r\n          <table className=\"custom-table\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((column, index) => (\r\n                  <th key={index}>{column.header}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {output.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                  <td>{rowIndex + 1}</td>\r\n                  <td>\r\n                    <div class=\"collection\">\r\n                      <img class=\"colle_icon\" src={row[2]} alt={row[0]} />\r\n                      <a href={row[4]} target=\"_blank\" rel=\"noopener noreferrer\">{row[0]}</a>\r\n                    </div>\r\n                  </td>\r\n                  <td>{row[3] ? row[3] : \"--\"}</td>\r\n                  <td>{row[5][\"floor_price\"] > 0 ? String(Math.round(row[5][\"floor_price\"] * 1000) / 1000) +\r\n                    \" ETH\" : \"--\"}</td>\r\n                  <td>{String(Math.round(row[5][\"market_cap\"])) + \" ETH\"}</td>\r\n                  <td>{row[6][i]['sales']}</td>\r\n                  <td>{String(Math.round(row[6][i]['volume'] * 100) / 100) + \" ETH\"}</td>\r\n                  <td>\r\n                    <p style={numberStyle(row[6][i]['volume_change'])}>\r\n                      {String(Math.round(row[6][i]['volume_change'] * 1000) / 10) + \"%\"}\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } catch {\r\n      return (\r\n        <p>Unknown error</p>\r\n      )\r\n    }\r\n  }\r\n};\r\nexport default Results;","C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\dashboard.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\favourites.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\owned-nfts.js",["202"],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\guide-components\\IntroNFTContent.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings-components\\Sidebar.js",[],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings-components\\PersonalDetails.js",["203","204"],"C:\\Users\\User\\Documents\\GitHub\\NFT-Browser\\nft-nexus-local-ver\\client\\src\\components\\account\\settings-components\\MainContent.js",[],{"ruleId":"205","severity":1,"message":"206","line":7,"column":10,"nodeType":"207","messageId":"208","endLine":7,"endColumn":23},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"205","severity":1,"message":"213","line":2,"column":27,"nodeType":"207","messageId":"208","endLine":2,"endColumn":33},{"ruleId":"205","severity":1,"message":"214","line":2,"column":60,"nodeType":"207","messageId":"208","endLine":2,"endColumn":64},{"ruleId":"205","severity":1,"message":"214","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"215","line":35,"column":11,"nodeType":"207","messageId":"208","endLine":35,"endColumn":24},{"ruleId":"216","severity":1,"message":"217","line":40,"column":18,"nodeType":"218","messageId":"219","endLine":40,"endColumn":32},{"ruleId":"205","severity":1,"message":"220","line":12,"column":13,"nodeType":"207","messageId":"208","endLine":12,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":7,"column":10,"nodeType":"207","messageId":"208","endLine":7,"endColumn":23},{"ruleId":"209","replacedBy":"221"},{"ruleId":"211","replacedBy":"222"},{"ruleId":"205","severity":1,"message":"213","line":2,"column":27,"nodeType":"207","messageId":"208","endLine":2,"endColumn":33},{"ruleId":"205","severity":1,"message":"214","line":2,"column":60,"nodeType":"207","messageId":"208","endLine":2,"endColumn":64},{"ruleId":"205","severity":1,"message":"220","line":12,"column":13,"nodeType":"207","messageId":"208","endLine":12,"endColumn":21},{"ruleId":"216","severity":1,"message":"217","line":47,"column":18,"nodeType":"218","messageId":"219","endLine":47,"endColumn":56},{"ruleId":"223","severity":1,"message":"224","line":33,"column":6,"nodeType":"225","endLine":33,"endColumn":44,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":9,"column":7,"nodeType":"218","endLine":9,"endColumn":70},{"ruleId":"227","severity":1,"message":"228","line":21,"column":7,"nodeType":"218","endLine":21,"endColumn":68},{"ruleId":"205","severity":1,"message":"229","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"230","line":3,"column":7,"nodeType":"207","messageId":"208","endLine":3,"endColumn":19},{"ruleId":"205","severity":1,"message":"231","line":13,"column":10,"nodeType":"207","messageId":"208","endLine":13,"endColumn":16},{"ruleId":"205","severity":1,"message":"232","line":13,"column":18,"nodeType":"207","messageId":"208","endLine":13,"endColumn":27},{"ruleId":"233","severity":1,"message":"234","line":28,"column":16,"nodeType":"235","messageId":"236","endLine":28,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":28,"column":37,"nodeType":"235","messageId":"236","endLine":28,"endColumn":39},{"ruleId":"233","severity":1,"message":"234","line":43,"column":23,"nodeType":"235","messageId":"236","endLine":43,"endColumn":25},{"ruleId":"223","severity":1,"message":"237","line":44,"column":6,"nodeType":"225","endLine":44,"endColumn":54,"suggestions":"238"},{"ruleId":"223","severity":1,"message":"239","line":59,"column":6,"nodeType":"225","endLine":59,"endColumn":8,"suggestions":"240"},{"ruleId":"223","severity":1,"message":"241","line":77,"column":6,"nodeType":"225","endLine":77,"endColumn":34,"suggestions":"242"},{"ruleId":"205","severity":1,"message":"243","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"229","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"224","line":32,"column":6,"nodeType":"225","endLine":32,"endColumn":44,"suggestions":"244"},{"ruleId":"205","severity":1,"message":"245","line":3,"column":20,"nodeType":"207","messageId":"208","endLine":3,"endColumn":35},{"ruleId":"205","severity":1,"message":"220","line":19,"column":13,"nodeType":"207","messageId":"208","endLine":19,"endColumn":21},"no-unused-vars","'Auth0Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["246"],"no-negated-in-lhs",["247"],"'Router' is defined but never used.","'Link' is defined but never used.","'renderContent' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Owned_NFTs must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'response' is assigned a value but never used.",["246"],["247"],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'hasMore'. Either exclude it or remove the dependency array.","ArrayExpression",["248"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'testImageUrl' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has unnecessary dependencies: 'hasMore', 'resultsType', and 'status'. Either exclude them or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'handleProcessData'. Either include it or remove the dependency array.",["250"],"React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["251"],"'useState' is defined but never used.",["252"],"'isAuthenticated' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"253","fix":"261"},"Update the dependencies array to be: [walletAddress, cursor, mode]",{"range":"262","text":"263"},"Update the dependencies array to be: [collection, sort]",{"range":"264","text":"265"},"Update the dependencies array to be: [handleProcessData]",{"range":"266","text":"267"},"Update the dependencies array to be: [handleProcessData, hasMore, status]",{"range":"268","text":"269"},{"range":"270","text":"263"},[1354,1392],"[walletAddress, cursor, mode]",[1937,1985],"[collection, sort]",[2341,2343],"[handleProcessData]",[3109,3137],"[handleProcessData, hasMore, status]",[1313,1351]]